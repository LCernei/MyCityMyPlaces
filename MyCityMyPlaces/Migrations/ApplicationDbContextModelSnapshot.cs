// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCityMyPlaces.Data;

namespace MyCityMyPlaces.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MyCityMyPlaces.Models.Family", b =>
                {
                    b.Property<int>("idFamily")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("idRelatedMember")
                        .HasColumnType("int");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.HasKey("idFamily");

                    b.HasIndex("idUser");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("MyCityMyPlaces.Models.Location", b =>
                {
                    b.Property<int>("idLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .HasColumnType("longtext");

                    b.Property<decimal>("coordinateX")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal>("coordinateY")
                        .HasColumnType("decimal(8,6)");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.Property<string>("locationName")
                        .HasColumnType("longtext");

                    b.Property<bool>("visible")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("idLocation");

                    b.HasIndex("idUser");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MyCityMyPlaces.Models.User", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("idUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MyCityMyPlaces.Models.Family", b =>
                {
                    b.HasOne("MyCityMyPlaces.Models.User", "User")
                        .WithMany("Families")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyCityMyPlaces.Models.Location", b =>
                {
                    b.HasOne("MyCityMyPlaces.Models.User", "User")
                        .WithMany("Locations")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyCityMyPlaces.Models.User", b =>
                {
                    b.Navigation("Families");

                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
